{
  "formats": {
    "number": {
      "currency": {
        "style": "currency"
      },
      "percent": {
        "style": "percent"
      }
    },
    "date": {
      "short": {
        "month": "numeric",
        "day": "numeric",
        "year": "2-digit"
      },
      "medium": {
        "month": "short",
        "day": "numeric",
        "year": "numeric"
      },
      "long": {
        "month": "long",
        "day": "numeric",
        "year": "numeric"
      },
      "full": {
        "weekday": "long",
        "month": "long",
        "day": "numeric",
        "year": "numeric"
      }
    },
    "time": {
      "short": {
        "hour": "numeric",
        "minute": "numeric"
      },
      "medium": {
        "hour": "numeric",
        "minute": "numeric",
        "second": "numeric"
      },
      "long": {
        "hour": "numeric",
        "minute": "numeric",
        "second": "numeric",
        "timeZoneName": "short"
      },
      "full": {
        "hour": "numeric",
        "minute": "numeric",
        "second": "numeric",
        "timeZoneName": "short"
      }
    },
    "relative": {
      "years": {
        "units": "year"
      },
      "months": {
        "units": "month"
      },
      "days": {
        "units": "day"
      },
      "hours": {
        "units": "hour"
      },
      "minutes": {
        "units": "minute"
      },
      "seconds": {
        "units": "second"
      }
    }
  },
  "messages": {
    ">>>>> comment: common_translate": "Common translation",
    "common.close": "Close",
    "common.refresh": "Refresh",
    "common.default": "Default",
    "common.back": "Back",
    "common.more": "More",
    "common.deleted": "Deleted",
    "common.modified": "Modified",
    "common.added": "Added",
    "common.remove": "Remove",
    "common.export.formated": "Export formatted",
    "common.status.active": "Active",
    "common.status.disconnected": "Disconnected",
    "common.status.pending": "Pending",
    "common.status.neverConnected": "Never connected",
    "common.date.now": "Today",
    "common.date.thisWeek": "This week",
    "common.date.lastMinute": "Last {minute} minute",
    "common.date.lastMinutes": "Last {minutes} minutes",
    "common.date.lastHour": "Last {hour} hour",
    "common.date.lastHours": "Last {hours} hours",
    "common.date.lastDay": "Last {day} day",
    "common.date.lastDays": "Last {days} days",
    "common.date.lastYear": "Last {year} year",
    "common.date.lastYears": "Last {years} years",
    "common.dashboard" : "Dashboard",
    "common.events" : "Events",
    "common.framework" : "Framework",
    "common.intelligence" : "Intelligence",

    "core.ui.welcomeMessage": "Loading OpenSearch",

    "opensearchDashboardsOverview.opensearchDashboards.solution.subtitle": "Visualization and Analytics",
    "opensearch-dashboards-react.osdOverviewPageHeader.addDataButtonLabel": "Add data",
    "opensearch-dashboards-react.osdOverviewPageHeader.devToolsButtonLabel": "Development Tools",
    "opensearch-dashboards-react.osdOverviewPageHeader.stackManagementButtonLabel": "Manage",
    "opensearch-dashboards-react.pageFooter.appDirectoryButtonLabel": "View application directory",
    "opensearch-dashboards-react.pageFooter.changeHomeRouteLink": "Show another page when logged in",

    ">>>>> comment: wazuh_plugin_translate": "Start Wazuh plugin translation",
    "discover.noResults.expandYourTimeRangeTitle": "Expand your time range",
    "discover.noResults.queryMayNotMatchTitle": "One or more of the indices you&rsquo;re looking at contains a date field. Your query may not match anything in the current time range, or there may not be any data at all in the currently selected time range. You can try changing the time range to one which contains data.",
    "discover.noResults.searchExamples.anyField200StatusCodeExampleTitle": "Find requests that contain the number 200, in any field",
    "discover.noResults.searchExamples.statusField200StatusCodeExampleTitle": "Find 200 in the status field",
    "discover.noResults.searchExamples.400to499StatusCodeExampleTitle": "Find all status codes between 400-499",
    "discover.noResults.searchExamples.400to499StatusCodeWithPhpExtensionExampleTitle": "Find status codes 400-499 with the extension php",
    "discover.noResults.searchExamples.400to499StatusCodeWithPhpOrHtmlExtensionExampleTitle": "Find status codes 400-499 with the extension php or html",
    "discover.noResults.searchExamples.refineYourQueryTitle": "Refine your query",
    "discover.noResults.searchExamples.howTosearchForWebServerLogsDescription": "The search bar at the top uses Elasticsearch&rsquo;s support for Lucene {queryStringSyntaxLink}.",
    "discover.noResults.searchExamples.queryStringSyntaxLinkText": "Query String syntax",
    "discover.noResults.searchExamples.noResultsMatchSearchCriteriaTitle": "No results match your search criteria",
    "discover.uninitializedTitle": "Start searching",
    "discover.uninitializedText": "Write a query, add some filters, or simply hit Refresh to retrieve results for the current query.",
    "discover.uninitializedRefreshButtonText": "Refresh data",
    "discover.docTable.pagerControl.pagesCountLabel": "{startItem}&ndash;{endItem} of {totalItems}",
    "discover.context.failedToLoadAnchorDocumentDescription": "Failed to load the anchor document",
    "discover.context.reloadPageDescription.reloadOrVisitTextMessage": "Please reload or go back to the document list to select a valid anchor document.",
    "discover.documentsAriaLabel": "Documents",
    "discover.howToSeeOtherMatchingDocumentsDescription": "These are the first {sampleSize} documents matching your search, refine your search to see others.",
    "discover.backToTopLinkText": "Back to top.",
    "discover.doc.failedToLocateIndexPattern": "No index pattern matches ID {indexPatternId}",
    "discover.doc.failedToLocateDocumentDescription": "Cannot find document",
    "discover.doc.couldNotFindDocumentsDescription": "No documents match that ID.",
    "discover.doc.failedToExecuteQueryDescription": "Cannot run search",
    "discover.doc.somethingWentWrongDescription": "{indexName} is missing.",
    "discover.doc.somethingWentWrongDescriptionAddon": "Please ensure the index exists.",
    "discover.doc.loadingDescription": "Loading...",
    "discover.hitsPluralTitle": "{hits, plural, one {hit} other {hits}}",
    "discover.reloadSavedSearchButton": "Reset search",
    "discover.searchingTitle": "Searching",
    "discover.fieldChooser.detailViews.visualizeLinkText": "Visualize",
    "discover.fieldChooser.detailViews.existsText": "Exists in",
    "discover.fieldChooser.detailViews.recordsText": "records",
    "discover.fieldChooser.fieldFilterFacetButtonLabel": "Filter by type",
    "discover.fieldChooser.indexPattern.changeLinkTooltip": "Change current index pattern",
    "discover.fieldChooser.filter.selectedFieldsTitle": "Selected fields",
    "discover.fieldChooser.filter.availableFieldsTitle": "Available fields",
    "discover.fieldChooser.filter.popularTitle": "Popular",
    "discover.skipToBottomButtonLabel": "Skip to end of table",
    "discover.docViews.table.filterForValueButtonTooltip": "Filter for value",
    "discover.docViews.table.unableToFilterForPresenceOfScriptedFieldsTooltip": "Unable to filter for presence of scripted fields",
    "discover.docViews.table.unableToFilterForPresenceOfMetaFieldsTooltip": "Unable to filter for presence of meta fields",
    "discover.docViews.table.filterForFieldPresentButtonTooltip": "Filter for field present",
    "discover.docViews.table.unindexedFieldsCanNotBeSearchedTooltip": "Unindexed fields can not be searched",
    "discover.docViews.table.filterOutValueButtonTooltip": "Filter out value",
    "discover.docViews.table.toggleColumnInTableButtonTooltip": "Toggle column in table",
    "discover.topNav.openSearchPanel.openSearchTitle": "Open search",
    "discover.topNav.openSearchPanel.noSearchesFoundDescription": "No matching searches found.",
    "discover.topNav.openSearchPanel.manageSearchesButtonLabel": "Manage searches",
    "discover.docTable.tableRow.detailHeading": "Expanded document",
    "discover.docTable.tableRow.viewSurroundingDocumentsLinkText": "View surrounding documents",
    "discover.docTable.tableRow.viewSingleDocumentLinkText": "View single document",
    "discover.docTable.noResultsTitle": "No results found",
    "discover.docTable.tableRow.filterForValueButtonAriaLabel": "Filter for value",
    "discover.docTable.tableRow.filterOutValueButtonTooltip": "Filter for value",
    "discover.docTable.tableRow.toggleRowDetailsButtonAriaLabel": "Toggle row details",
    "discover.histogramOfFoundDocumentsAriaLabel": "Histogram of found documents",

    "overviewWelcome.agent.notExist": "Không có đại lý nào được thêm vào người quản lý này",
    "overviewWelcome.agent.add": "Thêm đại lý",
    "overviewWelcome.label.sercurity": "Security Information Management",
    "overviewWelcome.label.auditAndProlicy": "Auditing and Policy Monitoring",
    "overviewWelcome.agents.gotoAll": "Go to all Kiosks",
    "overviewWelcome.stats.totalAgents": "Total Kiosks",
    "overviewWelcome.stats.activeAgents": "Active Kiosks",
    "overviewWelcome.stats.disconnectedAgents": "Disconnected Kiosks",
    "overviewWelcome.stats.pendingAgents": "Pending Kiosks",
    "overviewWelcome.stats.neverConnectedAgents": "Never connected Kiosks",

    "wazuhModules.general.title": "Security events",
    "wazuhModules.general.description": "Browse through your security alerts, identifying issues and threats in your environment.",
    "wazuhModules.fim.title": "Integrity monitoring",
    "wazuhModules.fim.description": "Alerts related to file changes, including permissions, content, ownership and attributes.",
    "wazuhModules.pm.title": "Policy monitoring",
    "wazuhModules.pm.description": "Verify that your systems are configured according to your security policies baseline.",
    "wazuhModules.vuls.title": "Vulnerabilities",
    "wazuhModules.vuls.description": "Discover what applications in your environment are affected by well-known vulnerabilities.",
    "wazuhModules.oscap.title": "OpenSCAP",
    "wazuhModules.oscap.description": "Configuration assessment and automation of compliance monitoring using SCAP checks.",
    "wazuhModules.audit.title": "System auditing",
    "wazuhModules.audit.description": "Audit users behavior, monitoring command execution and alerting on access to critical files.",
    "wazuhModules.pci.title": "PCI DSS",
    "wazuhModules.pci.description": "Global security standard for entities that process, store or transmit payment cardholder data.",
    "wazuhModules.gdpr.title": "GDPR",
    "wazuhModules.gdpr.description": "General Data Protection Regulation (GDPR) sets guidelines for processing of personal data.",
    "wazuhModules.hipaa.title": "HIPAA",
    "wazuhModules.hipaa.description": "Health Insurance Portability and Accountability Act of 1996 (HIPAA) provides data privacy and security provisions for safeguarding medical information.",
    "wazuhModules.nist.title": "NIST 800-53",
    "wazuhModules.nist.description": "National Institute of Standards and Technology Special Publication 800-53 (NIST 800-53) sets guidelines for federal information systems.",
    "wazuhModules.tsc.title": "TSC",
    "wazuhModules.tsc.description": "Trust Services Criteria for Security, Availability, Processing Integrity, Confidentiality, and Privacy",
    "wazuhModules.ciscat.title": "CIS-CAT",
    "wazuhModules.ciscat.description": "Configuration assessment using Center of Internet Security scanner and SCAP checks.",
    "wazuhModules.aws.title": "Amazon AWS",
    "wazuhModules.aws.description": "Security events related to your Amazon AWS services, collected directly via AWS API.",
    "wazuhModules.office.title": "Office 365",
    "wazuhModules.office.description": "Security events related to your Office 365 services.",
    "wazuhModules.gcp.title": "Google Cloud Platform",
    "wazuhModules.gcp.description": "Security events related to your Google Cloud Platform services, collected directly via GCP API.', // TODO G",
    "wazuhModules.virustotal.title": "VirusTotal",
    "wazuhModules.virustotal.description": "Alerts resulting from VirusTotal analysis of suspicious files via an integration with their API.",
    "wazuhModules.mitre.title": "MITRE ATT&CK",
    "wazuhModules.mitre.description": "Security events from the knowledge base of adversary tactics and techniques based on real-world observations",
    "wazuhModules.syscollector.title": "Inventory data",
    "wazuhModules.syscollector.description": "Applications, network configuration, open ports and processes running on your monitored systems.",
    "wazuhModules.stats.title": "Stats",
    "wazuhModules.stats.description": "Stats for kiosk and logcollector",
    "wazuhModules.configuration.title": "Configuration",
    "wazuhModules.configuration.description": "Check the current kiosk configuration remotely applied by its group.",
    "wazuhModules.osquery.title": "Osquery",
    "wazuhModules.osquery.description": "Osquery can be used to expose an operating system as a high-performance relational database.",
    "wazuhModules.sca.title": "Security configuration assessment",
    "wazuhModules.sca.description": "Scan your assets as part of a configuration assessment audit.",
    "wazuhModules.docker.title": "Docker listener",
    "wazuhModules.docker.description": "Monitor and collect the activity from Docker containers such as creation, running, starting, stopping or pausing events.",
    "wazuhModules.github.title": "GitHub",
    "wazuhModules.github.description": "Monitoring events from audit logs of your GitHub organizations.",
    "wazuhModules.devTools.title": "API console",
    "wazuhModules.devTools.description": "Test the Wazuh API endpoints.",
    "wazuhModules.logtest.title": "Test your logs",
    "wazuhModules.logtest.description": "Check your ruleset testing logs.",
    "wazuhModules.testConfiguration.title": "Test your configurations",
    "wazuhModules.testConfiguration.description": "Check configurations before applying them",

    "registerAgent.deploy": "Deploy a new kiosk",
    "registerAgent.step.title": "Steps",
    "registerAgent.step.operateSys": "Choose the operating system",
    "registerAgent.step.choose": "Choose the version",
    "registerAgent.step.architecture": "Choose the architecture",
    "registerAgent.step.wazuhServerAddress": "Wazuh server address",
    "registerAgent.step.wazuhPassword": "Wazuh password",
    "registerAgent.step.assignNameOrGroupAgent": "Assign a name and a group to the kiosk",
    "registerAgent.step.installAndEnrollTheAgent": "Install and enroll the kiosk",
    "registerAgent.step.verifyError": "There are fields with errors. Please verify them",
    "registerAgent.selectOs.operateSys": "Operating system",
    "registerAgent.selectOs.title": "OS version",
    "registerAgent.selectOs.architecture": "OS architecture",
    "registerAgent.selectOs.build": "OS version build",
    "registerAgent.selectGroup.titlte": "Choose Group",
    "registerAgent.rules.select": "Please select the {text}.",
    "registerAgent.rules.minCharacter": "The minimum length is 2 characters.",
    "registerAgent.rules.badCharacter": "The minimum length is 2 characters.",
    "registerAgent.rules.configOrPermission": "This section could not be configured because you do not have permission to read groups.",
    "registerAgent.rules.permissionAdmin": "You will need administrator privileges to perform this installation.",
    "registerAgent.rules.powerShell": "PowerShell 3.0 or greater is required.",
    "registerAgent.rules.runCommand": "Keep in mind you need to run this command in a Windows PowerShell terminal.",
    "registerAgent.rules.regexChar": "The character{pluralOrSingular} {char} {tobe} not valid. Allowed characters are A-Z, a-z, '.', '-', '_'",
    "registerAgent.info.name": "Name kiosk",
    "registerAgent.service.start": "Start the kiosk",
    "registerAgent.service.copyCommand": "Copy command",
    "registerAgent.service.verifyConnect": "To verify the connection with the Wazuh server, please follow this",
    "registerAgent.service.document": "document",
    "registerAgent.service.warningUpgrade": "If the installer finds another Wazuh kiosk in the system, it will upgrade it preserving the configuration.",
    "registerAgent.group.select": "Select one or more existing groups",
    "registerAgent.errors.permissionRegister": "This section could not be displayed because you do not have permission to get access to the registration service.",
    "registerAgent.command.installOrEnroll": "You can use this command to install and enroll the Wazuh kiosk.",
    "registerAgent.command.installOrEnrollInHost": "You can use this command to install and enroll the Wazuh kiosk in one or more hosts.",
    "registerAgent.message.extraInstall": "Might require some extra installation",
    "registerAgent.message.afterInstallHead": "After installing the kiosk, you need to enroll it in the Wazuh server. Check the Wazuh agent enrollment",
    "registerAgent.message.afterInstallFoot": "section to learn more.",
    "registerAgent.message.enroll": "Wazuh kiosk enrollment",
    "registerAgent.message.configProtoHead": "Warning: there's no",
    "registerAgent.message.configProtoBody": "secure protocol configured",
    "registerAgent.message.configProtoFoot": "and kiosks will not be able to communicate with the manager.",
    "registerAgent.message.downloadPackage": "the package from our repository and copy it to the Windows system where you are going to install it. Then run the following command to perform the installation:",
    "registerAgent.message.please": "Please",
    "registerAgent.message.download": "download",

    "agentsPreview.message.summary": "Could not get the kiosks summary",
    "agentsPreview.message.noRes": "No results",
    "agentsPreview.message.noData": "No results were found",
    "agentsPreview.tooltip.filterStatus": "Filter by kiosk status: {status}",
    "agentsPreview.tooltip.viewAgentDetail": "View kiosk details",
    "agentsPreview.errors.exoprtCsv": "Error exporting CSV: {error}",
    "agentsPreview.errors.activeAgent": "An error occurred while trying to get the most active kiosk: {error}",
    "agentsPreview.errors.addressApi": "Could not get the Wazuh API address: {error}",
    "agentsPreview.errors.version": "Could not get the Wazuh version: {error}",
    "agentsPreview.details.agentsCoverage": "Kiosks coverage",
    "agentsPreview.details.syncedAgents": "Synced kiosks",
    "agentsPreview.details.mostActive":"Most active kiosk",
    "agentsPreview.details.lastRegister":"Last registered kiosk",
    "agentsPreview.details.title":"Details",
    "agentsPreview.details.evolution":"EVOLUTION",
    "agentsPreview.col.manager":"Manager",

    "agents.errors.upgrade": "Unexpected error upgrading kiosk",
    "agents.errors.restart": "Error restarting the kiosk: {error}",
    "agents.errors.getting": "Error getting the kiosk: {error}",
    "agents.errors.setConfigPath": "{error} Set configuration path",

    "mainAgents.message.neverConnected": "This kiosk has never connected",
    "mainAgents.report.generate": "Generate report",

    "configurationNoAgent.message.registerButNotConnected": "The kiosk has been registered but has not yet connected to the manager.",
    "configurationNoAgent.message.checkConnect": "Checking connection with the Wazuh server",

    "serverAddress.description": " This is the address the kiosk uses to communicate with the Wazuh server. It can be an IP address or a fully qualified domain name (FQDN).",
    "serverAddress.title": "Server Address",
    
    "agentsTable.suggestions.filterConnect.label": "",
    "agentsTable.btn.deploy": "Deploy new kiosk",
    "agentsTable.btn.filterOrSearch": "Filter or search kiosk",
    "agentsTable.btn.openPanel": "Open summary panel for this kiosk",
    "agentsTable.btn.openConfig": "Open configuration for this kiosk",
    "agentsTable.message.noAgent": "No kiosks found",
    "agentsTable.col.name": "Name",
    "agentsTable.col.group": "Group(s)",
    "agentsTable.col.groups": "Groups",
    "agentsTable.col.nodeName": "Cluster node",
    "agentsTable.col.version": "Version",
    "agentsTable.col.dateAdd": "Registration date",
    "agentsTable.col.lastKeepAlive": "Last keep alive",
    "agentsTable.col.status": "Status",
    "agentsTable.col.synced": "Synced",
    "agentsTable.col.actions": "Actions",
    "agentsTable.label.agents": "Kiosks",
    "agentsTable.error.notAgentList": "Could not get the kiosks list",
    "agentsTable.suggest.status": "Filter by kiosk connection status",
    "agentsTable.suggest.groupConfigStatus": "Filter by kiosk synced configuration status",
    "agentsTable.suggest.osPlatform": "Filter by OS platform",
    "agentsTable.suggest.ip": "Filter by kiosk IP",
    "agentsTable.suggest.name": "Filter by kiosk name",
    "agentsTable.suggest.id": "Filter by kiosk id",
    "agentsTable.suggest.group": "Filter by kiosk group",
    "agentsTable.suggest.nodeName": "Filter by node name",
    "agentsTable.suggest.manager": "Filter by manager",
    "agentsTable.suggest.version": "Filter by kiosk version",
    "agentsTable.suggest.configSum": "Filter by kiosk config sum",
    "agentsTable.suggest.mergedSum": "Filter by kiosk merged sum",
    "agentsTable.suggest.dateAdd": "Filter by add date",
    "agentsTable.suggest.lastKeepAlive": "Filter by last keep alive",
    "agentsTable.item.selected": "The {selectedItemsLength} kiosks on this page are selected",
    "agentsTable.agent.clearAll": "Clear all kiosks selection ({totalItems})",
    "agentsTable.agent.selectAll": "Select all kiosks ({totalItems})",
    "agentsTable.tooltip.selectCol" : "Select columns table",

    "agentsSection.menuAgent.securityInformation": "Security information management",
    "agentsSection.menuAgent.auditing": "Auditing and Policy Monitoring'",
    "agentsSection.menuAgent.threatDetection": "Threat detection and response",
    "agentsSection.menuAgent.regulatoryCompliance": "Regulatory Compliance",
    "agentsSection.menuAgent.general": "Security events",
    "agentsSection.menuAgent.fim": "Integrity monitoring",
    "agentsSection.menuAgent.aws": "Amazon AWS",
    "agentsSection.menuAgent.gcp": "Google Cloud Platform",
    "agentsSection.menuAgent.github": "GitHub",
    "agentsSection.menuAgent.pm": "Policy Monitoring",
    "agentsSection.menuAgent.sca": "Security configuration assessment",
    "agentsSection.menuAgent.scaCompact": "SCA",
    "agentsSection.menuAgent.audit": "System Auditing",
    "agentsSection.menuAgent.oscap": "OpenSCAP",
    "agentsSection.menuAgent.ciscat": "CIS-CAT",
    "agentsSection.menuAgent.vuls": "Vulnerabilities",
    "agentsSection.menuAgent.virustotal": "VirusTotal",
    "agentsSection.menuAgent.osquery": "Osquery",
    "agentsSection.menuAgent.docker": "Docker Listener",
    "agentsSection.menuAgent.mitre": "MITRE ATT&CK",
    "agentsSection.menuAgent.pci": "PCI DSS",
    "agentsSection.menuAgent.gdpr": "GDPR",
    "agentsSection.menuAgent.hipaa": "HIPAA",
    "agentsSection.menuAgent.nist": "NIST 800-53",
    "agentsSection.menuAgent.tsc": "TSC",
    "agentsSection.menuAgent.office365": "Office 365",

    "agentsWelcome.mitre.open": "Open MITRE",
    "agentsWelcome.events.countEvolution": "Events count evolution",
    "agentsWelcome.events.modules": "Modules",
    "agentsWelcome.events.compliance": "Compliance",

    "agentVisualizations.general.alertEvolution": "Alert groups evolution",
    "agentVisualizations.general.alerts": "Alerts",
    "agentVisualizations.general.top5Alerts": "Top 5 alerts",
    "agentVisualizations.general.top5RuleGroup": "Top 5 rule groups",
    "agentVisualizations.general.top5Pci": "Top 5 PCI DSS Requirements",
    "agentVisualizations.aws.sources": "Sources",
    "agentVisualizations.aws.accounts": "Accounts",
    "agentVisualizations.aws.s3Buckets": "S3 buckets",
    "agentVisualizations.aws.regions": "Regions",
    "agentVisualizations.aws.eventsBySource": "Events by source over time",
    "agentVisualizations.aws.eventsByS3Buckets": "Events by S3 bucket over time",
    "agentVisualizations.aws.geolocationMap": "Geolocation map",
    "agentVisualizations.fim.mostActiveUser": "Most active users",
    "agentVisualizations.fim.actions": "Actions",
    "agentVisualizations.fim.events": "Events",
    "agentVisualizations.fim.filesAdded": "Files added",
    "agentVisualizations.fim.filesModified": "Files modified",
    "agentVisualizations.fim.filesDeleted": "Files deleted",
    "agentVisualizations.gcp.top5Rules": "Top 5 rules",
    "agentVisualizations.gcp.topQueryEvents": "Top query events",
    "agentVisualizations.gcp.top5Instances": "Top 5 instances",
    "agentVisualizations.gcp.topProject": "Top project id by sourcetype",
    "agentVisualizations.gcp.alertsEvolution": "GCP alerts evolution",
    "agentVisualizations.gcp.auth": "Auth answer count",
    "agentVisualizations.gcp.resource": "Resource type by project id",
    "agentVisualizations.pci.requirement": "PCI Requirements",
    "agentVisualizations.pci.ruleLevelDistribution": "Rule level distribution",
    "agentVisualizations.gdpr.top5Requirement": "Top 5 GDPR requirements",
    "agentVisualizations.gdpr.requirement": "GDPR Requirements",
    "agentVisualizations.nist.top10Requirement": "Top 10 requirements",
    "agentVisualizations.nist.requirementsDistributedByLevel": "Requirements distributed by level",
    "agentVisualizations.nist.requirementsOverTime": "Requirements over time",
    "agentVisualizations.tsc.top5requirements": "Top 5 TSC requirements",
    "agentVisualizations.tsc.requirements": "TSC Requirements",
    "agentVisualizations.hipaa.requirements": "HIPAA requirements",
    "agentVisualizations.hipaa.requirementsDistributionByLevel": "Requirements distribution by level",
    "agentVisualizations.hipaa.mostCommonAlerts": "Most common alerts",
    "agentVisualizations.virustotal.lastScanned": "Last scanned files",
    "agentVisualizations.virustotal.malicious": "Malicious files alerts Evolution",
    "agentVisualizations.virustotal.lastFiles": "Last files",
    "agentVisualizations.osquery.mostCommonActions": "Most common Osquery actions",
    "agentVisualizations.osquery.evolution": "Evolution of Osquery events per pack over time",
    "agentVisualizations.osquery.mostCommonPacks": "Most common Osquery packs being used",
    "agentVisualizations.osquery.mostCommonRule": "Most common rules",
    "agentVisualizations.mitre.alertsEvolution": "Alerts evolution over time",
    "agentVisualizations.mitre.topTactics": "Top tactics",
    "agentVisualizations.mitre.ruleLevelByAttack": "Rule level by attack",
    "agentVisualizations.mitre.ruleLevelByTactic": "Rule level by tactic",
    "agentVisualizations.mitre.attacksByTactic": "MITRE attacks by tactic",
    "agentVisualizations.docker.top5Image": "Top 5 images",
    "agentVisualizations.docker.top5Events": "Top 5 events",
    "agentVisualizations.docker.resourcesUsageOverTime": "Resources usage over time",
    "agentVisualizations.docker.eventsOccurredEvolution": "Events occurred evolution",
    "agentVisualizations.oscap.top5Scans": "Top 5 Scans",
    "agentVisualizations.oscap.top5Profiles": "Top 5 Profiles",
    "agentVisualizations.oscap.top5Content": "Top 5 Content",
    "agentVisualizations.oscap.top5Severity": "Top 5 Severity",
    "agentVisualizations.oscap.dailySAcansEvolution": "Daily scans evolution",
    "agentVisualizations.oscap.alertsTop5": "Top 5 - Alerts",
    "agentVisualizations.oscap.alertsHighRisk": "Top 5 - High risk alerts",
    "agentVisualizations.ciscat.top5Groups": "Top 5 CIS-CAT groups",
    "agentVisualizations.ciscat.scanEvolution": "Scan result evolution",
    "agentVisualizations.pm.alertsOT": "Alerts over time",
    "agentVisualizations.pm.ruleDistribution": "Rule distribution",
    "agentVisualizations.pm.eventsPerControTypeEvolution": "Events per control type evolution",
    "agentVisualizations.pm.groups": "Groups",
    "agentVisualizations.pm.commands": "Commands",
    "agentVisualizations.pm.files": "Files",
    "agentVisualizations.github.alertsEvolutionByOrganization": "Alerts evolution by organization",
    "agentVisualizations.github.top5Organizations": "Top 5 organizations by alerts",
    "agentVisualizations.github.topAlerts": "Top alerts by action type and organization",
    "agentVisualizations.github.moreAlertUser": "Users with more alerts",
    
    "checkUpgrade.message.agentUpdated" : "This kiosk is being updated.",

    "exportConfiguration.options.global":"Global configuration",
    "exportConfiguration.options.communication":"Communication",
    "exportConfiguration.options.antiFloodingSettings":"Anti-flooding settings",
    "exportConfiguration.options.labels":"Labels",
    "exportConfiguration.options.policyMonitoring":"Policy monitoring",
    "exportConfiguration.options.inventoryData":"Inventory data",
    "exportConfiguration.options.activeResponse":"Active response",
    "exportConfiguration.options.commands":"Commands",
    "exportConfiguration.options.logCollection":"Log collection",
    "exportConfiguration.options.integrityMonitoring":"Integrity monitoring",
    "exportConfiguration.options.configurations":"Configurations",
    "exportConfiguration.options.agentsInGroup":"Kiosks in group",
    "exportConfiguration.options.selectAll":"Select all",
    "exportConfiguration.options.unSelect":"Unselect all",
    "exportConfiguration.pdf.generate":"Generate PDF report",

    "selectgAgent.message.noAgent" : "No kiosks found",
    "selectgAgent.select.agent" : "Select kiosk",

    "wzAccordion.open": "Show more",
    "wzAccordion.hide": "Show less",

    "// in sca module": "sca-module",
    "main.promptMessage.noSelectAgent": "You need to select an kiosk to see Security Configuration Assessment inventory.",
    "main.promptMessage.neverConnect": "Kiosk has never connected",
    "main.promptMessage.neverConnectDes": "The kiosk has never been connected please select another",

    "kibanaVis.action.refreshIndex": "Refreshing Index Pattern.",
    "kibanaVis.message.noRes": "No results found",
    "kibanaVis.message.noAlertField": " No alerts were found with the field: ",

    "mitreTop.title": "Top Tactics",
    "mitreTop.tactic.defenseEvasion": "Defense Evasion",
    "mitreTop.tactic.impact": "Impact",
    "mitreTop.tactic.persistence": "Persistence",
    "mitreTop.tactic.privilegeEscalation": "Privilege Escalation",
    "mitreTop.tactic.initialAccess": "Initial Access",
    "mitreTop.tactic.backTopTactics": "Back Top Tactics",

    "fimEventsTable.title":"FIM: Recent events",
    "fimEventsTable.tooltip.openFim": "Open FIM",
    "fimEventsTable.col.time": "Time",
    "fimEventsTable.col.path": "Path",
    "fimEventsTable.col.action": "Action",
    "fimEventsTable.col.ruleDescription": "Rule description",
    "fimEventsTable.col.ruleLevel": "Rule Level",
    "fimEventsTable.col.ruleId": "Rule Id",
    "fimEventsTable.message.noRecentEvents": "No recent events",
    
    "scaScan.lastestScan": "SCA: Lastest scans",
    "scaScan.open": "Open SCA Scans",
    "scaScan.message.agentSetting" : "Check your kiosk settings to generate scans.",

    "generateReports.title": "Generate report",

    "overviewActions.agent.change" : "Change kiosk selected",
    "overviewActions.agent.explore" : "Explore kiosk",
    "overviewActions.agent.unpin" : "Unpin kiosk",
    "overviewActions.select.agent" : "Select an kiosk to explore its modules",
    "overviewActions.module.notSupport" : "This module is not supported for kiosks.",

    "visualizeTopMenu.agent.change": "Change Kiosk {agent}",
    "visualizeTopMenu.agent.remove": "Remove Kiosk {agent}",
    "visualizeTopMenu.agent.select": "Select an kiosk",
    "visualizeTopMenu.agent.title": "kiosk",

    "mountPointPortal.message.renderContent": "Error rendering portal content",

    "<<<<<<<<<<<<<<< comment: wazuh_plugin_translate": "End Wazuh plugin translation"
  }
}
